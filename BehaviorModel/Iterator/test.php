<?php
/**
 * Iterator：
 * 定义：提供一种方法，顺序访问一个聚合对象中的每一个元素，而不暴露其内部结构的表示
 * 优点：
 * 1.支持以不同的方式遍历一个聚合对象
 * 2.迭代器将遍历这个功能从聚合对象中分离出来，更符合单一职责。简化了聚合对象
 * 3.在迭代器模式下新增聚合对象和迭代器类都很方便，无需修改以前的代码，符合开闭原则
 *
 * 缺点：由于遍历功能从聚合对象中抽离，所以新增聚合对象，同时也需要新增一个相关联的迭代器对象，增加了系统内类的数量，增加了系统的复杂度
 *
 * 适用场景：
 * 1.遍历一个聚合对象而不暴露其内部结构
 * 2.需要为聚合对象提供多种不同的遍历方式
 * 3.为不同的聚合对象提供统一的遍历接口
 */

require './MyIterator.php';

use Iterator\MyIterator;

$t = new MyIterator(['one' => '1', 'two' => '2']);

foreach ($t as $k => $v) {
    echo "$k:$v".PHP_EOL;
}